{
    "workbench.colorTheme": "Nord",
    "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
    // "terminal.integrated.shellArgs.windows": [ "/k p:\\handmadehero\\misc\\shell.bat"],
    "editor.minimap.enabled": false,
    "explorer.confirmDelete": false,
    "todo-tree.tree.showScanModeButton": false,
    //===VsCodeVim====
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "alt+k"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.leader": "<space>",
    "vim.normalModeKeyBindings": [
        {
            "before": [
                "<space>",
                "o"
            ],
            "after": [
                "o",
                "<Esc>"
            ]
        },
        {
            "before": [
                "<space>",
                "O"
            ],
            "after": [
                "O",
                "<Esc>"
            ]
        },
    ],
    "C_Cpp.clang_format_style": "{BasedOnStyle: Google, ColumnLimit: 120}",
    "editor.tabSize": 2,
    "cSpell.language": "en,de",
    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": false
    },
    // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": true,
    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",
    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,
    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",
    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": true,
    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "recentlyUsed",
    // Enable word based suggestions
    "editor.wordBasedSuggestions": true,
    // Enable parameter hints
    "editor.parameterHints.enabled": true,
    "editor.lineNumbers": "relative",
    "C_Cpp.clang_format_sortIncludes": false,
    "editor.fontFamily": "Source Code Pro Medium",
    "vim.easymotionMarkerFontFamily": "Source Code Pro Medium",
    "editor.formatOnType": true,
    "editor.renderLineHighlight": "all",
    "editor.lineHeight": 20,
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.folders.theme": "classic",
    "material-icon-theme.opacity": null,
    "material-icon-theme.folders.color": "#88c0d0",
    "material-icon-theme.saturation": 1,
    "material-icon-theme.hidesExplorerArrows": true,
    "workbench.startupEditor": "newUntitledFile",
    "editor.formatOnSave": true,
}